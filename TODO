* KIM v2

** Remove obsolete neighbor modes [DONE]

** Port to cmake

** adapt core.?pp

** check if other files need changes

** document DSL [started]

** adapt run_tests.py for DSL changes (no neighbor mode any more) [DONE]

** run tests



* TESTS

** the bash scripts should probably go into the C++ code???
   how to expose a maximum number of tests to the KIM project pipeline?
   how to have one command to test *everything* locally?

*** for the "everything" test: output if certain features are not
    supported by the model

** additional test: "amorphous" system (perhaps poisson disk sampling
   with some minimum distance)

** a better summary of tests (show only failure?)

** iterate tests also over all combinations of supported features
   (force on/off, energy on/off) where it makes sense

** more lattice constants and so on

** test lattice optimization and so on

*** dE/dV = p, and p = virial/V (roughly, signs may be wrong)

    given that, couldn't we use the virial as a gradient for box size
    optimization? test!

** test changing parameters (hard to say how to verify something here)





* A simple scripting language to drive the program.

* Benchmark replacing map with unordered_map!

* Neighborlists using ghost atoms are somewhat implemented
** neighbor lists need "skin" [This is possible already but Compute
   just sets a zero skin. This must be user-definable because the
   optimal skin dpends on what should be done with the
   box. E.g. lattice MC doesn't need skin at all.]

* Way to optimize box volume and shape in addition to positions
** Simple scaling of abs(a), abs(b) and abs(c) is already possible.
*** although it seems buggy for non-orthorhombix boxes.

* All in all the following properties should be calculated for
   different lattices:
** cohesive energy
** lattice constant(s) and atomic positions
** bulk modulus with and without atomic relaxation
** stiffness tensor with and without atomic relaxation
** surface properties
*** relaxation, stress, energy

* Monte-Carlo

* ...
