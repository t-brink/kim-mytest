* Neighborlists using ghost atoms are somewhat implemented
** still support MI_OPBC_F *if* box is orthorhombic
*** Should use ghostless neighbor lists
** disable neighbor lists when using cluster
** correctly feed the ghost atoms to KIM, this is still somewhat
   segfault-heavy :-(
*** the LAMMPS plugin passes number of atoms + number of ghosts as
   numberOfParticles, when only providing iterator access to neighbors
   this may be acceptable
** take care to update ghost atoms and neighborlists at appropriate
   times
** neighbor lists need "skin"

* organize everything in a readable and maintainable way
** well-defined interfaces need to be implemented

* Way to optimize box volume and shape in addition to positions

* Non-orthorhombic boxes

* bulk modulus curves with relaxation
* elastic constants (stiffness tensor)

* All in all the following properties should be calculated for
   different lattices:
** cohesive energy
** lattice constant(s) and atomic positions
** bulk modulus with and without atomic relaxation
** stiffness tensor with and without atomic relaxation
** surface properties
*** relaxation, stress, energy

* make it possible to do this all with different neighbor list methods

* clean up class interfaces
** if we can get a non-const reference anyway, we don't need a method
   to get it, just make it public

* Monte-Carlo

* Array1D to match Array2D, Array3D, ...

* Dynamic choice of model

* ...